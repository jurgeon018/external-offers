{% extends "base.jinja2" %}
{% block head %}
    <style>
        .table-striped > tbody > tr:nth-child(odd) > td,
        .table-striped > tbody > tr:nth-child(odd) > th,
        .table-hover > tbody > tr:hover > td,
        .table-hover > tbody > tr:hover > th {
            background-color: transparent;
        }
    </style>
    <script>
        let DEBUG = 'True' === '{{ debug }}'
        function formDataFromObject(obj) {
            var form_data = new URLSearchParams();
            for ( var key in obj ) {
                form_data.append(key, obj[key]);
            }
            return form_data
        }
        function getBody(obj){
            return DEBUG ? JSON.stringify(obj) : formDataFromObject(obj)
        }

        async function onClickCreateCSVReport() {
           const error_message = 'Не удалось получить отчет, попробуйте позднее :(';
           let generate_csv_button = $("#generate-csv-button");
           let download_link = $("#download-link");
           let download_link_container = $("#download-link-container");
           let obj = {
               'durationMax': {% if filter_data.duration_max  %}{{ filter_data.duration_max }}{% else %}null{% endif %},
               'durationMin': {% if filter_data.duration_min  %}{{ filter_data.duration_min }}{% else %}null{% endif %},
               'timeFrom': {% if filter_data.time_from  %}'{{ filter_data.time_from.strftime('%Y-%m-%dT%H:%M') }}'{% else %}null{% endif %},
               'timeTo': {% if filter_data.time_to  %}'{{ filter_data.time_to.strftime('%Y-%m-%dT%H:%M') }}'{% else %}null{% endif %},
               'operatorId': {{ selected_operator_id }}
           }
           const response = await fetch("/api/admin/v1/create-csv-report/", {
             method: 'POST',
             body: getBody(obj)
           });
           const resp = await response.json();
           if (resp.reportId) {
             generate_csv_button.prop('disabled', true);
             generate_csv_button.text('Подождите, отчёт генерируется');
             let in_progress_count = 5;
             let i = 50;
             while (i)  {
                 i--;
                const status_response = await fetch("/api/admin/v1/get-csv-report-status/", {
                     method: 'POST',
                     body: getBody({'reportId': resp.reportId})
                });
                if (!status_response.ok) {
                    generate_csv_button.prop('disabled', false);
                    generate_csv_button.text('Сгенерировать CSV');
                    alert(error_message);
                }
                const status_resp = await status_response.json();
                if (status_resp.status == 'completed' || in_progress_count == 0) {
                    generate_csv_button.prop('disabled', false);
                    generate_csv_button.text('Сгенерировать CSV');

                    const csv_response = await fetch("/api/admin/v1/download_csv/", {
                        method: 'POST',
                        body: getBody({'reportId': resp.reportId})
                    });
                    const file_data = await csv_response.json();
                    var a = document.createElement("a");
                    var binaryData = [];
                    binaryData.push(file_data.content);
                    a.href = window.URL.createObjectURL(new Blob(binaryData, {type: "text/csv"}));
                    a.download = "report.csv";
                    a.click();
                    break
                } else if  (status_resp.status == 'inProgress') {
                    in_progress_count--;
                }  else if  (status_resp.status == 'error') {
                    generate_csv_button.prop('disabled', false);
                    generate_csv_button.text('Сгенерировать CSV');
                    alert(error_message);
                } else {
                    await new Promise(done => setTimeout(() => done(), 2000));
                }
             }
           } else {
              alert(error_message);
           }
         }
    </script>
{% endblock %}
{% block title %}Оператор {{ current_operator.full_name }} ({{ current_operator.operator_id }}){% endblock %}
{% block page_header %}История звонков{% endblock %}
{% block content %}
    <div class="col-sm-7">
        <form class="form-horizontal" method="GET" autocomplete="off" action="">
            <div class="form-group">
                <label class="col-sm-4 col-form-label">Даты</label>
                <div class="col-sm-4">
                    <input name="time_from"
                           value="{% if filter_data.time_from  %}{{ filter_data.time_from.strftime('%Y-%m-%dT%H:%M') }}{% endif %}"
                           type="datetime-local" class="form-control input-sm" id="dateFrom">
                </div>
                <div class="col-sm-4">
                    <input name="time_to"
                           value="{% if filter_data.time_to  %}{{ filter_data.time_to.strftime('%Y-%m-%dT%H:%M') }}{% endif %}"
                           type="datetime-local" class="form-control input-sm" id="dateTo">
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-4 col-form-label">Длительность</label>
                <div class="col-sm-4">
                    <input name="duration_min"
                           value="{{ filter_data.duration_min }}"
                           type="number" class="form-control input-sm" id="durationMin">
                </div>
                <div class="col-sm-4">
                    <input name="duration_max"
                           value="{{ filter_data.duration_max }}"
                           type="number" class="form-control input-sm" id="durationMax">
                </div>
            </div>
            {% if current_operator.is_teamlead or debug %}
            <div class="form-group">
                <label for="operatorId" class="col-sm-4 col-form-label">Оператор</label>
                <div class="col-sm-8">
                    <select name="operator_id" class="form-control input-sm" id="operatorId">
                        {% for operator in operators %}
                            <option value="{{ operator.operator_id }}"
                                    {% if operator.operator_id|int == selected_operator_id %}selected{% endif %}>
                                {{ operator.full_name }}({{ operator.operator_id }})
                            </option>
                        {% endfor %}
                    </select>
                </div>
            </div>
            {% endif %}
            {% if not debug %}
                <input type="hidden" name="mcs" value="external-offers">
                <input type="hidden" name="url" value='/admin/calls-history/'>
            {% endif %}
            <button type="submit" class="btn btn-primary button">Искать</button>
        </form>
    </div>
    <div class="col-sm-5 text-right">
        <button id="generate-csv-button" type="submit" class="btn btn-default" onclick="onClickCreateCSVReport()">
            Сгенерировать CSV
        </button>
        <p id="download-link-container" style="display: none">Скачать: <a id="download-link" href=""></a></p>
    </div>
    <div class="col-sm-12">
        <br><br>
        {% if calls %}
            <nav aria-label="Search results pages">
                <ul class="pagination">
                    {% if previous_page_link %}
                        <li class="page-item"><a class="page-link" href="{{ previous_page_link }}">Предыдущая</a></li>
                    {% endif %}
                    {% if next_page_link %}
                        <li class="page-item"><a class="page-link" href="{{ next_page_link }}">Следующая</a></li>
                    {% endif %}
                </ul>
            </nav>
            <table class="table table-striped text-center">
                <tr>
                    <th class="text-center">Время</th>
                    <th class="text-center">С какого телефона</th>
                    <th class="text-center">На какой телефон</th>
                    <th class="text-center">Продолжительность разговора</th>
                    <th class="text-center">Разговор</th>
                </tr>
                {% for call in calls %}
                    <tr>
                        <td>{{ call.created_time.strftime('%d.%m.%Y %H:%M') }}</td>
                        <td>{{ call.phone_from }}</td>
                        <td>{{ call.phone_to }}</td>
                        <td>{{ call.duration }}</td>
                        <td>
                            <audio
                                    controls
                                    src="{{ call.mp3_url }}" style="height: 35px">
                                Your browser does not support the
                                <code>audio</code> element.
                            </audio>
                        </td>
                    </tr>
                {% endfor %}
            </table>
        {% else %}
            <p>Звонки не найдены</p>
        {% endif %}
    </div>
{% endblock %}

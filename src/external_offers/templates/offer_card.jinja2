<div class="main_style">
    <div class="header-block">
        <div class="client-info">
                <div class="client-info-offer-title">
                    <a rel="noopener noreferrer" target="_blank" href="{{ parsed_object_model.url }}">{{ parsed_object_model.title }}</a>
                </div>
                <div class="client-info-offer-phones">
                    {% for phone in client.client_phones %}
                        <span>{{ phone }}</span>
                    {% endfor %}
                </div>
                <div class="client-info-offer-address">
                    <span>{{ parsed_object_model.address }}</span>
                </div>
                <div class="client-info-offer-name">
                    {% if parsed_object_model.contact %}
                        {{ parsed_object_model.contact }}
                    {% endif %}
                </div>
        </div>
    </div>
    
    <div class="main-block">
    <form class="ajax-form">
        <div class="offerForm">

            <div class="offerDealTypeTitle"><span class="">Тип сделки</span></div>
            <div class="offerDealTypeSelect">
                <select class="select-control" id="getDealType">
                    <option value="" disabled>Не выбрано</option>
                    <option value="rent" {% if parsed_object_model.is_rent %}selected{% endif %}>Аренда</option>
                    <option value="sale" {% if parsed_object_model.is_sale %}selected{% endif %}>Продажа</option>
                </select>
            </div>

            {# parsed_object_model.is_rent #}
            <div class="offerTermTypeTitle" style="display: {% if parsed_object_model.is_rent %}block{% else %}none{% endif %};">
                <span class="">Срок аренды</span>
            </div>
            <div class="offerTermTypeSelect" style="display: {% if parsed_object_model.is_rent %}block{% else %}none{% endif %};">
                <select class="select-control" id="getTermType">
                    <option value="" selected disabled>Не выбрано</option>
                    <option value="long" {% if parsed_object_model.is_long_term_rent and parsed_object_model.is_rent %}selected{% endif %}>
                        Долгосрочная
                    </option>
                    <option value="daily" {% if parsed_object_model.is_daily_term_rent and parsed_object_model.is_rent %}selected{% endif %}>
                        Посуточная
                    </option>
                </select>
            </div>

            <div class="offerTypeTitle"><span class="">Тип недвижимости</span></div>
            <div class="offerTypeSelect">
                <select class="select-control" id="getOfferType">
                    <option value="" selected disabled>Не выбрано</option>
                    <option value="flat" {% if parsed_object_model.is_allow_realty_type %} selected {% endif %}>Жилая</option>
                    <option value="commerce" disabled>Коммерческая</option>
                    <option value="suburban" {% if parsed_object_model.is_suburban_sale %} selected {% endif %}>Загородная</option>
                    <option value="newobject" disabled>Новостройки</option>
                </select>
            </div>

            <div class="offerCategoryTypeTitle"><span class="">Объект</span></div>
            <div class="offerCategoryTypeSelect">
                <select class="select-control" id="getCategoryType">
                    <option value="" selected disabled>
                        Не выбрано
                    </option>
                    {# parsed_object_model.is_allow_realty_type #}
                    <option value="flat"
                            class="is_allow_realty_type_option"
                            style="display: {% if parsed_object_model.is_allow_realty_type %} block {% else %} none {% endif %};"
                            {% if parsed_object_model.is_flat %} selected {% endif %}
                    >
                        Квартира
                    </option>
                    <option value="room"
                            class="is_allow_realty_type_option"
                            style="display: {% if parsed_object_model.is_allow_realty_type %} block {% else %} none {% endif %};"
                            {% if parsed_object_model.is_room %} selected {% endif %}
                    >
                        Комната
                    </option>
                    <option value="share"
                            class="is_allow_realty_type_option"
                            style="display: {% if parsed_object_model.is_allow_realty_type %} block {% else %} none {% endif %};"
                            {% if parsed_object_model.is_share %} selected {% endif %}
                    >
                        Доля в квартире
                    </option>
                    <option value="bed"
                            class="is_allow_realty_type_option"
                            style="display: {% if parsed_object_model.is_allow_realty_type %} block {% else %} none {% endif %};"
                            {% if parsed_object_model.is_bed %}  selected {% endif %}
                    >
                        Койко-место (только аренда)
                    </option>

                    {# parsed_object_model.is_suburban_sale #}
                    <option value="house"
                            id="house"
                            class="is_suburban_sale_option"
                            style="display: {% if parsed_object_model.is_suburban_sale %} block {% else %} none {% endif %};" 
                            {% if parsed_object_model.is_house %} selected {% endif %}
                    >
                        Дом/дача
                    </option>
                    <option value="townhouse"
                            class="is_suburban_sale_option"
                            style="display: {% if parsed_object_model.is_suburban_sale %} block {% else %} none {% endif %};" 
                            {% if parsed_object_model.is_townhouse %} selected {% endif %}
                    >
                        Таунхаус
                    </option>
                    <option value="cottage"
                            class="is_suburban_sale_option"
                            style="display: {% if parsed_object_model.is_suburban_sale %} block {% else %} none {% endif %};" 
                            {% if parsed_object_model.is_cottage %} selected {% endif %}
                    >
                        Коттедж
                    </option>
                    <option value="land"
                            class="is_suburban_sale_option"
                            style="display: {% if parsed_object_model.is_suburban_sale %} block {% else %} none {% endif %};" 
                            {% if parsed_object_model.is_land %} selected {% endif %}
                    >
                        Участок
                    </option>

                </select>
            </div>

            <div>
                <input
                    style="display: none;"
                    name="updateOfferCategory"
                    class="updateOfferCategory"
                    id="updateOfferCategory"
                    type="button"
                    value="Обновить категорию"
                />
            </div>

            <div class='table-block-header'>
                <span class="text-header">Адрес</span>
            </div>
            <div class="offerAddressTitle">
                <span class="">Адрес</span>
            </div>
            <div class="offerAddressInput">
                    <input class="input-control" placeholder="Адрес объекта"
                           value="{{ parsed_object_model.address }}"
                           type="text" id="getAddress">
            </div>

            <div class='table-block-header'>
                <span class="text-header">Об объекте</span>
            </div>

            {# parsed_object_model.is_allow_realty_type #}
            <div class="offerRealtyTypeTitle" style="display: {% if parsed_object_model.is_allow_realty_type %} block {% else %}none{% endif %};">
                <span class="">Тип жилья</span>
            </div>
            <div class="offerCategoryTypeSelect" style="display: {% if parsed_object_model.is_allow_realty_type %} block {% else %}none{% endif %};">
                <select class="select-control" id="getRealtyType">
                    <option value="" selected disabled>Не выбрано</option>
                    <option value="flat">Квартира</option>
                    <option value="apartments">Апартаменты</option>
                </select>
            </div>

            <div class="offerTotalAreaTitle">
                <span class="">Общая площадь</span>
            </div>
            <div class="offerTotalAreaInput">
                <input type="number" required value="{{ parsed_object_model.total_area }}"
                       placeholder="Площать объекта в м2"
                       class="input-control" id="getTotalArea">
            </div>

            {# parsed_object_model.is_allow_rooms #}
            <div class="offerRoomsCountTitle" style="display: {% if parsed_object_model.is_allow_rooms %}block{% else %}none{% endif %};">
                <span class="">Количество комнат</span>
            </div>
            <div class="offerRoomsCountSelect" style="display: {% if parsed_object_model.is_allow_rooms %}block{% else %}none{% endif %};">
                <select class="select-control" id="getRoomsCount">
                    <option value="" selected disabled>Не выбрано</option>
                    <option value="room1">1</option>
                    <option value="room2">2</option>
                    <option value="room3">3</option>
                    <option value="room4">4</option>
                    <option value="room5">5</option>
                    <option value="room6_plus">6+</option>
                    <option value="open_plan">свободная планировка</option>
                    <option value="studio">студия</option>
                </select>
            </div>

            <div class="offerFloorNumberTitle">
                <span class="">Этаж (необязательно)</span>
            </div>
            <div>
                <input type="number" class="input-control" value="{{ parsed_object_model.floor_number | int }}"
                       placeholder="Этаж объекта" id="getFloorNumber">
            </div>
            <div></div>
            <div>
                <input type="number" class="input-control" value="{{ parsed_object_model.floors_count | int }}"
                       placeholder="Общее количество этажей в доме"
                       id="getFloorCount">
            </div>
            
            {# parsed_object_model.is_suburban_sale #}
            <div class="offerLandAreaTitle" style="display: {% if parsed_object_model.is_suburban_sale %}block{% else %}none{% endif %};">
                <span class="">Площадь участка</span>
            </div>
            <div class="offerLandAreaInput" style="display: {% if parsed_object_model.is_suburban_sale %}block{% else %}none{% endif %};">
                <input type="number" required value="{{ parsed_object_model.land_area }}"
                    placeholder="Площать участка в сотках"
                    class="input-control" id="getLandArea">
                <select class="select-control" id="getAreaUnit">
                    <option value="" selected>Не выбрано</option>
                    <option value="sotka" {% if parsed_object_model.land_area_unit == 'sotka' %} selected {% endif %}>Сотка</option>
                    <option value="hectare" {% if parsed_object_model.land_area_unit == 'hectare' %} selected {% endif %}>Гектар</option>
                </select>
            </div>

            {# parsed_object_model.is_land and parsed_object_model.is_suburban_sale #}
            <div class="offerLandStatusTitle" style="display: {% if parsed_object_model.is_land %}block{% else %}none{% endif %};">
                <span class="">Тип участка</span>
            </div>
            <div class="offerLandStatusInput" style="display: {% if parsed_object_model.is_land %}block{% else %}none{% endif %};">
                <select class="select-control" id="getLandStatus">
                    <option value="" selected>Не выбрано</option>
                    <option value="individualHousingConstruction" {% if parsed_object_model.land_status == 'ИЖС' %}selected {% endif %}>ИЖС</option>
                    <option value="gardening" {% if parsed_object_model.land_status == 'СНТ, ДНП' %} selected {% endif %}>Садоводство</option>
                    <option value="industrialLand" {% if parsed_object_model.land_status == 'промназначения' %} selected {% endif %}>Земля промназначения</option>
            </select>
            </div>
            
            <div class='table-block-header'>
                <td><span class="text-header">Условия сделки</span></td>
            </div>

            <div class="offerPriceTitle"> <span class="">Цена</span></div>
            <div class="offerPriceInput">
                <input class="input-control" required placeholder="Цена объекта в рублях"
                    value="{{ parsed_object_model.price }}" type="number" id="getPrice">
            </div>

            {# parsed_object_model.is_rent #}
            <div class="offerDepositTitle" style="display: {% if parsed_object_model.is_rent %} block {% else %} none {% endif %};">
                    <span class="">Залог</span>
            </div>
            <div class="offerDepositInput" style="display: {% if parsed_object_model.is_rent %} block {% else %} none {% endif %};">
                <input class="input-control" required placeholder="Залог собственнику"
                    type="number" id="getDeposit">
            </div>

            {# parsed_object_model.is_long_term_rent #}
            <div class="offerPrepayMonthsTitle" style="display: {% if parsed_object_model.is_long_term_rent %} block {% else %} none {% endif %}">
                    <span class="">Предоплата</span>
            </div>
            <div class="offerPrepayMonthsInput" style="display: {% if parsed_object_model.is_long_term_rent %} block {% else %} none {% endif %}">
                <input class="input-control" required placeholder="Предоплата (от 1 до 12 месяцев)"
                    type="number" id="getPrepayMonths">
            </div>

            {# parsed_object_model.is_sale #}
            <div class="offerSaleTypeTitle" style="display: {% if parsed_object_model.is_sale %} block {% else %} none {% endif%};">
                    <span class="">Тип продажи</span>
            </div>
            <div class="offerSaleTypeSelect" style="display: {% if parsed_object_model.is_sale %} block {% else %} none {% endif%};">
                <select class="select-control" id="getSaleType">
                    <option value="" selected disabled>Не выбрано</option>
                    <option value="free">Свободная продажа</option>
                    <option value="alternative">Альтернатива</option>
                </select>
            </div>

            <div class='table-block-header'>
                <span class="text-header">Дополнительно</span>
            </div>

            <div class="offerDescriptionTitle">
                <span class=""> Описание объявления</span>
            </div>
            <div class="offerDescriptionTitleInput">
                    <textarea class="input-control"
                              placeholder="Описание объявления"
                              id="getDescription"></textarea>
            </div>
        </div>
            {% if not exist_drafts %}
                <div class="clientForm">
                    <div class='client-table-block-header'>
                        <span class="text-header">Личный кабинет</span>
                    </div>
                    <div class="changeClientPhoneTitle">
                        <span class="">Номер телефона</span>
                    </div>

                    <div id="clientPhoneNumberInput" class="client-form-phone-input">
                        <input class="input-control" placeholder="Реальный телефон владельца"
                            value="{{ client.client_phones[0] }}"
                            type="string"
                            id="getPhoneNumber"
                            style="float: left">
                    </div>
                    <div id="clientPhoneNumberBtn">
                        <button id="updateClientPhoneNumberBtn" style="float: left" type="button" class="btn">Сменить</button>
                    </div>
                    <div id="accountCheckboxesBlock" >
                    <div id="useExistingAccountRadio" style="float: left;">
                        <input type="radio" style="float: left;" name="account" id="getUseExistingAccount" checked>
                    </div>
                    <div id="useExistingAccountTitle" style="float: left;">
                        <span class="">Использовать существующий ЛК</span>
                    </div>
                    <div id="createNewAccountRadio" style="float: left;">
                        <input type="radio" style="float: left;" name="account" id="getCreateNewAccount">
                    </div>
                    <div id="createNewAccountTitle" style="float: left;">
                        <span class="">Создать новый ЛК</span>
                    </div>

                    </div>

                    <div id="createNewAccountSpacer">
                    </div>
                    <div id="accountForDraftTitle">
                        <span class="">Выбранный ЛК</span>
                    </div>
                    <div id="accountForDraftSelect">
                        <select class="select-control" id="getAccountForDraft">
                            <option value="" selected disabled>Не выбрано</option>
                            {% for client_account in client_accounts %}
                                <option value={{ client_account.cian_user_id }}>{{ client_account.email }} {% if client_account.is_agent %}Специалист{% else %}Собственник{% endif %}</option>
                            {% endfor %}
                        </select>
                    </div>
                    <div id="accountForDraftSpacer"></div>

                    <div id="accountTypeTitle">
                        <span class="">Тип ЛК</span>
                    </div>
                    <div id="accountTypeSelect">
                        <select class="select-control" id="getAccountType">
                            <option selected value="realtor">Специалист</option>
                            <option value="homeowner">Собственник</option>
                        </select>
                    </div>
                    <div id="accountTypeSpacer"></div>

                    <div id="transformAccountToSpecialistTitleBlock" >
                    <div id="transformAccountToSpecialistCheckboxTitle" style="float: left;">
                        <span class="">Превратить в специалиста</span>
                    </div>
                    </div>

                    <div id="transformAccountToSpecialistCheckboxBlock">
                    <div id="transformAccountToSpecialistCheckbox" style="float: left;">
                        <input type="checkbox" style="float: left;" name="account" id="getTransformAccountToSpecialist" checked>
                    </div>
                    <div id="transformAccountToSpecialistMessage" style="float: left;">
                        <span class="">Это действие не может быть отменено позже!</span>
                    </div>
                    </div>

                </div>
            {% endif %}
    </form>
    </div>

    <div class="footer-block">
        <div>
            <div class="text-info">{{ info_message }}</div>
            <div class="save-offer-button-block">
                <button id="saveOfferBtn" type="button" class="btn">Сохранить объявление</button>
            </div>
        </div>
    </div>
</div>  

<script>
    jQuery(($) => {
        let DEBUG = 'True' === '{{ debug }}'
        let clientAccountsDict = {}
        {% for client_account in client_accounts %}
        clientAccountsDict[{{ client_account.cian_user_id }}] = {% if client_account.is_agent %} true {% else %} false {% endif %}
        {% endfor %}

        const saveOfferBtn = $('#saveOfferBtn');
        const updateClientPhoneBtn = $('#updateClientPhoneNumberBtn');
        const getDealType = $('#getDealType');
        const getTermType = $('#getTermType');
        const getOfferType = $('#getOfferType');
        const getCategoryType = $('#getCategoryType');
        const initialDealTypeValue = getDealType.val()
        const initialTermTypeValue = getTermType.val()
        const initialOfferTypeValue = getOfferType.val()
        const initialCategoryTypeValue = getCategoryType.val()
        const getAddress = $('#getAddress');
        const getRealtyType = $('#getRealtyType');
        const getTotalArea = $('#getTotalArea');
        const getRoomsCount = $('#getRoomsCount');
        const getFloorNumber = $('#getFloorNumber');
        const getFloorCount = $('#getFloorCount');
        const getPrice = $('#getPrice');
        const getSaleType = $('#getSaleType');
        const getPhoneNumber = $('#getPhoneNumber');
        const getDescription = $('#getDescription');
        const getDeposit = $('#getDeposit');
        const getPrepayMonths = $('#getPrepayMonths');
        const getCreateNewAccount = $('#getCreateNewAccount');
        const getAccountForDraft = $('#getAccountForDraft');
        const getAccountType = $('#getAccountType');
        const getUseExistingAccount = $('#getUseExistingAccount');
        const getTransformAccountToSpecialist = $('#getTransformAccountToSpecialist');
        const getLandArea = $('#getLandArea');
        const getAreaUnit = $('#getAreaUnit')
        const getLandStatus = $('#getLandStatus');
        const updateOfferCategoryBtn = $('#updateOfferCategory');
        const is_allow_realty_type_options = $(".is_allow_realty_type_option")
        const is_suburban_sale_options = $(".is_suburban_sale_option")
        const house_option = $('#house')


        $('.ajax-form').on('submit', (event) => {
            event.preventDefault();
        });
        
        // fix for service.cian.ru
        window.onpopstate = function(event) {
            location.reload();
        };

        function getNumberOrStrNull(obj) {
            return isNaN(parseInt(obj)) ? (DEBUG ? null : "null") : parseInt(obj)
        }

        function getValueOrStrNull(obj) {
            return obj === '' ? (DEBUG ? null : "null") : obj
        }

        function onClickCreateNewAccountRadio() {
            var account_title_element = document.getElementById('accountForDraftTitle')
            var account_input_element = document.getElementById('accountForDraftSelect')
            var account_spacer_element = document.getElementById('accountForDraftSpacer')
            var type_title_element = document.getElementById('accountTypeTitle')
            var type_input_element = document.getElementById('accountTypeSelect')
            var type_spacer_element = document.getElementById('accountTypeSpacer')
            var transform_account_title_block = document.getElementById('transformAccountToSpecialistTitleBlock')
            var transform_account_checkbox_block = document.getElementById('transformAccountToSpecialistCheckboxBlock')

            if (getCreateNewAccount.is(':checked') === true) {
                account_title_element.style.display = 'none'
                account_input_element.style.display = 'none'
                account_spacer_element.style.display = 'none'
                transform_account_title_block.style.display = 'none'
                transform_account_checkbox_block.style.display = 'none'
                type_title_element.style.display = 'inline'
                type_input_element.style.display = 'inline'
                type_spacer_element.style.display = 'inline'
            }
        }

        function onClickUseExistingAccountRadio() {
            var account_title_element = document.getElementById('accountForDraftTitle')
            var account_input_element = document.getElementById('accountForDraftSelect')
            var account_spacer_element = document.getElementById('accountForDraftSpacer')
            var type_title_element = document.getElementById('accountTypeTitle')
            var type_input_element = document.getElementById('accountTypeSelect')
            var type_spacer_element = document.getElementById('accountTypeSpacer')
            var transform_account_title_block = document.getElementById('transformAccountToSpecialistTitleBlock')
            var transform_account_checkbox_block = document.getElementById('transformAccountToSpecialistCheckboxBlock')

            if (getUseExistingAccount.is(':checked') === true) {
                account_title_element.style.display = 'inline'
                account_input_element.style.display = 'inline'
                account_spacer_element.style.display = 'inline'
                type_title_element.style.display = 'none'
                type_input_element.style.display = 'none'
                type_spacer_element.style.display = 'none'
                if (clientAccountsDict[getAccountForDraft.val()] === false) {
                    transform_account_title_block.style.display = 'inline'
                    transform_account_checkbox_block.style.display = 'inline'
                } else {
                    transform_account_title_block.style.display = 'none'
                    transform_account_checkbox_block.style.display = 'none'
                }
            }
        }

        function onChangeAccountForDraftCombo() {
            clientAccountsDict[getAccountForDraft.val()] === true
            var transform_account_title_block = document.getElementById('transformAccountToSpecialistTitleBlock')
            var transform_account_checkbox_block = document.getElementById('transformAccountToSpecialistCheckboxBlock')

            if (clientAccountsDict[getAccountForDraft.val()] === false) {
                transform_account_title_block.style.display = 'inline'
                transform_account_checkbox_block.style.display = 'inline'
            } else {
                transform_account_title_block.style.display = 'none'
                transform_account_checkbox_block.style.display = 'none'
            }
        }
        
        function toggleUpdateOfferCategoryBtn() {
            if(
                initialDealTypeValue == getDealType.val() && 
                initialTermTypeValue == getTermType.val() && 
                initialOfferTypeValue == getOfferType.val() && 
                initialCategoryTypeValue == getCategoryType.val()
            )
            {
                updateOfferCategoryBtn.css({'display': 'none'})
            }else{
                updateOfferCategoryBtn.css({'display': 'block'})
            }

        }

        function updateFields() {
            // toggle TermType
            if(getDealType.val() == 'rent'){
                // show TermType
                $(".offerTermTypeTitle").css({'display':'block'});
                $(".offerTermTypeSelect").css({'display':'block'});
            }else if(getDealType.val() == 'sale'){
                // hide TermType
                $(".offerTermTypeTitle").css({'display':'none'});
                $(".offerTermTypeSelect").css({'display':'none'});
                $(".offerTermTypeSelect").val("").change();
            }
            // toggle CategoryType
            if(getOfferType.val() == 'flat'){
                is_allow_realty_type_options.show();
                is_suburban_sale_options.hide();
            }else if(getOfferType.val() == 'suburban'){
                // https://jira.cian.tech/browse/CD-109868?focusedCommentId=1063395&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-1063395
                // Для посуточной аренды загородки должен быть доступен только дом
                is_suburban_sale_options.show();
                is_allow_realty_type_options.hide();
                if(getTermType.val() == 'daily' && getDealType.val() == 'rent'){
                    is_suburban_sale_options.hide();
                    house_option.show()
                }
            }
        }

        const saveOffer = () => {
            if (getPrice.val() === "") {
                alert('Цена обязательный параметр!');
                return
            } else if (getTotalArea.val() === "") {
                alert('Общая площадь обязательный параметр!');
                return
            } else if (getAddress.val() === "") {
                alert('Адрес обязательный параметр!');
                return
            } else if (getDescription.val() === "") {
                alert('Описание объявления обязательный параметр!');
                return
            }
            var createNewAccount = getCreateNewAccount.is(':checked')
            var publishAsHomeowner = null

            if (createNewAccount === true) {
                publishAsHomeowner = (getAccountType.val() === 'homeowner')
            } else if (clientAccountsDict[getAccountForDraft.val()] === true){
                publishAsHomeowner = false
            } else {
                publishAsHomeowner = !getTransformAccountToSpecialist.is(':checked')
            }

            let obj = {
                dealType: getDealType.val(),
                offerType: getOfferType.val(),
                category: getCategoryType.val(),
                address: getAddress.val(),
                totalArea: parseInt(getTotalArea.val()),
                price: parseInt(getPrice.val()),
                description: getDescription.val(),
                floorNumber: getNumberOrStrNull(getFloorNumber.val()),
                floorsCount: getNumberOrStrNull(getFloorCount.val()),
                roomsCount: getValueOrStrNull(getRoomsCount.val()),
                realtyType: getValueOrStrNull(getRealtyType.val()),
                saleType: getValueOrStrNull(getSaleType.val()),
                termType: getValueOrStrNull(getTermType.val()),
                createNewAccount: createNewAccount,
                publishAsHomeowner: publishAsHomeowner,
                accountForDraft:  getNumberOrStrNull(createNewAccount ? "" : getAccountForDraft.val()),
                offerId: '{{ offer_id }}',
                clientId: '{{ client.client_id }}',
                landArea: getNumberOrStrNull(getLandArea.val()),
                landAreaUnitType: getValueOrStrNull(getAreaUnit.val()),
                landStatus: getValueOrStrNull(getLandStatus.val()),
            }
            {% if parsed_object_model.is_rent %}
                let obj_rent = {
                    deposit: getNumberOrStrNull(getDeposit.val()),
                }
                obj = {...obj, ...obj_rent};
            {% endif %}
    
            {% if parsed_object_model.is_long_term_rent %}
                let obj_long_term_rent = {
                    prepayMonths: getNumberOrStrNull(getPrepayMonths.val()),
                }
                obj = {...obj, ...obj_long_term_rent};
            {% endif %}

            // $.post("/api/admin/v1/save-offer/", 
            //     DEBUG ? JSON.stringify(obj) : obj
            fetch("/api/admin/v1/save-offer/", 
                {
                    method: 'POST',
                    body: JSON.stringify(obj),
                    headers: {
                        'Content-Type':'application/json',
                    }
                }
            ).then((response) => {
                    return response.json();
                }
            ).then(function (data) {
                switch (data.status) {
                    case 'ok':
                        alert('Объявление успешно создано как черновик');
                        if (DEBUG) {
                            window.location.href = `/admin/offers-list/`;
                        } else {
                            // workaround to redirect when on service.cian.ru
                            queryParams = new URLSearchParams(window.location.search)
                            queryParams.set("url", `/admin/offers-list/`);
                            history.pushState(null, null, "?"+queryParams.toString());
                            location.reload()
                        }
                        break;
                    default:
                        alert(data.message);
                        break;
                }
            });
        };

        const updateOfferCategory = () => {
            let termType = getTermType.val();
            // validate dealType and termType
            if(getDealType.val() == 'rent' && !getTermType.val()){
                alert('Выберите срок аренды.')
                return null
            }
            else if(getDealType.val() == 'sale'){
                termType = null;
            }
            let obj = {
                offerId: '{{offer_id}}',
                dealType: getDealType.val(),
                termType: termType,
                offerType: getOfferType.val(),
                categoryType: getCategoryType.val(),
            }
            console.log("obj", obj)

            // $.post("/api/admin/v1/update-offer-category/", 
            //     DEBUG ? JSON.stringify(obj) : obj

            fetch("/api/admin/v1/update-offer-category/", 
                {
                    method: 'POST',
                    body: JSON.stringify(obj),
                    headers:{
                        'Content-Type':'application/json',
                    }
                }
            ).then((response) => {
                    return response.json();
                }
            ).then((response) => {
                if(response.success == true){
                    alert(`${response.message}`);
                    // location.reload();
                }else{
                    getTermType.val('')
                    getDealType.val('')
                    getOfferType.val('')
                    getCategoryType.val('')
                    alert(response.message)
                }
            });


        }

        getDealType.change(() => {
            toggleUpdateOfferCategoryBtn()
            updateFields()
        })

        getTermType.change(() => {
            toggleUpdateOfferCategoryBtn()
            updateFields()
        })

        getOfferType.change(() => {
            toggleUpdateOfferCategoryBtn()
            updateFields()
        })

        getCategoryType.change(() => {
            toggleUpdateOfferCategoryBtn()
            updateFields()
        })

        updateOfferCategoryBtn.click(() => {
            updateOfferCategory()
        })

        saveOfferBtn.click(() => {
            saveOffer()
        });

        getCreateNewAccount.click(() => {
            onClickCreateNewAccountRadio()
        })

        getAccountForDraft.change(() => {
            onChangeAccountForDraftCombo()
        })

        getUseExistingAccount.click(() => {
            onClickUseExistingAccountRadio()
        })

        updateClientPhoneBtn.click(function() {
            if (getPhoneNumber.val() === "") {
                alert('Телефон обязательный параметр!')
                return
            }
            let obj = {
                phoneNumber: getPhoneNumber.val(),
                clientId: '{{ client.client_id }}',

            }
            $.post("/api/admin/v1/update-client-phone/", DEBUG ? JSON.stringify(obj) : obj
            ).then(function (data) {
                if (data.success === true) {
                    alert('Телефон успешно изменен')
                    location.reload();
                } else {
                    errors = data.errors.map((element) => element.message).join('\n');
                    alert(errors)
                }
            });
        })

    });

    let meta = document.createElement('meta');
    meta.name = "referrer";
    meta.content = "no-referrer";
    document.getElementsByTagName('head')[0].appendChild(meta);
</script>

<style>
    .main_style {
        background: rgba(255, 255, 255, 1);
        opacity: 1;
        top: 0px;
        left: 0px;
    }

    .ajax-form {
        top: 70px;
        left: 300px;
    }

    .select-control, .input-control {
        width: 100%;
    }

    table, th, td {
        border: 0;
        border-spacing: 20px;
    }

    .text-header {
        font-family: Arial;
        font-weight: Bold;
        font-size: 24px;
        opacity: 1;
        text-align: left;
    }

    .text-info {
        color: rgba(111, 111, 111, 1);
        font-family: Arial;
        font-size: 16px;
        opacity: 1;
        text-align: left;
    }

    .btn {
        height: 30px;
    }

    .client-info-offer-title {
        color: rgba(66, 120, 176, 1);
        font-family: Arial;
        font-weight: Bold;
        font-size: 24px;
        text-align: left;
    }

    .client-info-offer-phones {
        color: rgba(0, 0, 0, 1);
        font-family: Arial;
        font-weight: Bold;
        font-size: 24px;
        text-align: right;
    }

    .client-info-offer-name {
        color: rgba(0, 0, 0, 1);
        font-family: Arial;
        font-size: 16px;
        opacity: 1;
        text-align: left;
    }

    .client-info-offer-address {
        color: rgba(0, 0, 0, 1);
        grid-column-start: 1;
        grid-column-end: 3;
        font-family: Arial;
        font-size: 16px;
        text-align: left;
    }
    
    .offerForm {
        display: grid;
        grid-template-columns: 0.5fr 1fr;
        padding: 2em 0 1em 0;
        margin-left: auto;
        margin-right: auto;
        width: 60%
    }

    .clientForm {
        display: grid;
        grid-template-columns: 0.75fr 0.5fr 0.5fr 0.5fr;
        padding: 0em 0;
        margin-left: auto;
        margin-right: auto;
        width: 60%
    }

    .offerForm div {
        padding: 0.1em 0;
    }
    .client-form-input {
        grid-column-start: 2;
        grid-column-end: 4;
    }
    .client-form-phone-input {
        grid-column-start: 2;
        grid-column-end: 4;
    }
    .header-block {
        margin-left: auto;
        margin-right: auto;
        width: 60%;
        padding: 1em 0 0;
    }
    .footer-block {
        margin-left: auto;
        margin-right: auto;
        width: 60%
    }
    .client-info {
        display: grid;
        grid-template-columns: 0.7fr 0.3fr;  
    }
    .table-block-header {
        grid-column-start: 1;
        grid-column-end: 3;
    }
    .client-table-block-header {
        grid-column-start: 1;
        grid-column-end: 5;
    }
    .clientForm div {
        padding: 0.1em 0;
    }
    #clientPhoneNumberBtn {
        padding: 0em 0.9em;
    }

    #accountForDraftTitle {
        grid-column-start: 1;
        grid-column-end: 2;
    }
    #accountForDraftSelect {
        grid-column-start: 2;
        grid-column-end: 4;
    }
    #accountTypeSelect {
        grid-column-start: 2;
        grid-column-end: 4;
        display: none;
    }
    #accountTypeTitle {
        display: none;
    }
    .save-offer-button-block {
        margin-left: auto;
        margin-right: auto;
        width: 30%
    }
    #accountCheckboxesBlock {
        grid-column-start: 1;
        grid-column-end: 4;
    }
    #createNewAccountSpacer {
        grid-column-start: 4;
        grid-column-end: 5;
    }
    #useExistingAccountRadio {
        padding: 0.75em 0em;
    }

    #createNewAccountRadio {
        padding: 0.75em 0em;
    }

    #useExistingAccountTitle {
        padding: 0.75em 2em 0.75em 0.5em
    }

    #createNewAccountTitle {
        padding: 0.75em 1em 0.75em 0.5em;
    }
    #transformAccountToSpecialistTitleBlock {
        grid-column-start: 1;
        grid-column-end: 2;
        display: none
    }
    #transformAccountToSpecialistCheckboxBlock {
        grid-column-start: 2;
        grid-column-end: 5;
        display: none;
    }
    #transformAccountToSpecialistMessage {
        padding-left: 1em;
        color: red;
    }
    .text-info {
        padding: 1em 0 0.5em 0;
    }
</style>

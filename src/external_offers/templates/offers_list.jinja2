<html>
   <head>
      <style>
         .offers {
         margin: 1em;
         }
         .offers-grid {
         }
         .title {
         font-weight: bold;
         padding: 0.5em 0;
         }
         .client-info {
         margin: 1em;
         }
         .offers-row.offers-row-header {
         border-top: 2px solid #000000;
         }
         .offercolumn.offercolumnheader {
         font-weight: bold;
         }
         .offers-row {
         border-top: 0;
         border-bottom: 2px solid #000000;
         border-left: 2px solid #000000;
         border-right: 2px solid #000000;
         grid-column-start: 1;
         grid-column-end: 4;
         grid-row-start: 1;
         grid-row-end: 3;
         display: grid;
         grid-template-columns: repeat(2, 1fr) 0.5fr;
         border-radius: 2px;
         padding: 1em;
         }
         .update-offers-block {
         padding: 1em;
         display: {% if (offers is defined) and offers %} none {% else %} grid {% endif %};
         }
         .update-offers-button {
         margin: auto;
         }
         .update-offers-messages {
         margin: auto;
         padding: 1em;
         }

         .client-buttons {

         }

         .decline-client-block {
            padding: 0.5em 0em;
            display: inline-block;
         }
         
         .call-missed-client-block {
            padding: 0.5em 0.5em;
            display: inline-block;
         }


      </style>
      <meta charset="utf-8">
   </head>
   <body>
      <div class="update-offers-block">
         <button class="update-offers-button" id="updateOffersButton1">Выдать задание</button>
         <div class="update-offers-messages" id="updateOffersMessages1"></div>
      </div>

      {% if (client is defined) and client %}
      <div class="client-info">
         <div class="title">Клиент</div>
         <div class="clientid">Идентификатор: {{ client.client_id }}</div>
         <div class="clientname">Имя: {{ client.client_name }}</div>
         <div class="clientphone">Телефон: {{ client.client_phone }}</div>
         <div class="client-buttons">
            <div class="decline-client-block">
               <button class="decline-client-button" id="declineClientButton1">Отказ</button>
               <div class="decline-client-messages" id="declineClientMessages1"></div>
            </div>
            <div class="call-missed-client-block">
               <button class="call-missed-client-button" id="callMissedClientButton1">Недозвон</button>
               <div class="call-missed-client-messages" id="callMissedClientMessages1"></div>
            </div>
         </div>
      </div>
      <div class="offers">
         {% if (offers is defined) and offers %}
         <div class="title">Объявления</div>
         <div class="offers-grid">
            <div class="offers-row offers-row-header">
               <div class="offercolumn offercolumnheader">Идентификатор</div>
               <div class="offercolumn offercolumnheader">Создано</div>
            </div>
          {% for offer in offers %}
            <div class="offers-row">
               <div class=offercolumn>{{ offer.id }}</div>
               <div class=offercolumn>{{ offer.created_at|date }} {{ offer.created_at|time }}</div>
               <div class=offercolumn>
                  <form style="display:inline"><button>Удалить</button></form>
               </div>
            </div>
         </div>
         {% endfor %}
      </div>
      {% else %}
      Нет объявлений в работе, получите новые задания
      {% endif %}
      {% else %}
      Нет клиента в работе, получите новые задания
      {% endif %}
      <script type="text/javascript">
         function formDataFromObject(obj) {
            var form_data = new FormData();
            for ( var key in obj ) {
               form_data.append(key, obj[key]);
            }

            return form_data
         }

         let DEBUG = 'True' === '{{ debug }}'

         document.getElementById("updateOffersButton1").onclick = async function () {
           const response = await fetch("/api/admin/v1/update-offers-list/", {
             method: 'POST'
           });
           resp = await response.json()
           if (resp.success === true) {
             location.reload(); 
           } else {
             errors = resp.errors.map((element) => element.message).join('<br>')
             document.getElementById("updateOffersMessages1").innerHTML = errors
           }
         };

         {% if (client is defined) and client %}
         document.getElementById("declineClientButton1").onclick = async function () {
           let obj =  {
               'client_id': {{ client.client_id }}
           }
           const response = await fetch("/api/admin/v1/decline-client/", {
             method: 'POST',
             body: DEBUG ? JSON.stringify(obj) : formDataFromObject(obj)
           });
           resp = await response.json()
           if (resp.success === true) {
             location.reload(); 
           } else {
             errors = resp.errors.map((element) => element.message).join('<br>')
             document.getElementById("declineClientMessages1").innerHTML = errors
           }
         };

         document.getElementById("callMissedClientButton1").onclick = async function () {
           let obj =  {
               'client_id': {{ client.client_id }}
           }
           const response = await fetch("/api/admin/v1/call-missed-client/", {
             method: 'POST',
             body: DEBUG ? JSON.stringify(obj) : formDataFromObject(obj)
           });
           resp = await response.json()
           if (resp.success === true) {
             location.reload(); 
           } else {
             errors = resp.errors.map((element) => element.message).join('<br>')
             document.getElementById("callMissedClientMessages1").innerHTML = errors
           }
         };

         {% endif %}
      </script>
      <body>
</html>